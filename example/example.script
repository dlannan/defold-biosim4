function init(self)
	local s = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local reverse_s = biosim.reverse(s)
	print(reverse_s) --> ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba

	msg.post("@render:", "clear_color", {color = vmath.vector4(1, 1, 1, 1)})
	-- size of texture when scaled to nearest power of two
	local width = 512
	local height = 512
	local channels = 4

	self.resource_path = go.get("#sprite", "texture0")

	self.buffer_info = {
		buffer = buffer.create(width * height, {{name = hash("rgba"), type = buffer.VALUE_TYPE_UINT8, count = channels}}),
		width = width,
		height = height,
		channels = channels
	}

	self.header = {width = width, height = height, type = resource.TEXTURE_TYPE_2D, format = resource.TEXTURE_FORMAT_RGBA, num_mip_maps = 1}
	drawpixels.fill(self.buffer_info, 255, 255, 0, 255)
	resource.set_texture(self.resource_path, self.header, self.buffer_info.buffer)

	biosim.SimulationStart("data/biosim4.ini")
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	local agents = {}
	local count = biosim.SimulationStep(agents)
	if(count > 5) then 
		drawpixels.fill(self.buffer_info, 255, 255, 255, 255)
		for k = 1, count-1, 6 do 
			local x = agents[k]
			local y = agents[k + 1]
			local sz = agents[k + 2]
			local r = agents[k + 3]
			local g = agents[k + 4]
			local b = agents[k + 5]
			drawpixels.filled_circle(self.buffer_info, x, y, sz, r, g, b, 255, false)
		end 
		resource.set_texture(self.resource_path, self.header, self.buffer_info.buffer)
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
